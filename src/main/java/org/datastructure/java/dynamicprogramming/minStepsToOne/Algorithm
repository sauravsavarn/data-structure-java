Min Steps To One

IDEA :

    Greedy Approach (Doesn’t work always) :
        As per greedy approach we may choose the step that makes n as low as possible and
        continue the same, till it reaches 1.

        while ( n > 1)
        {
            if (n % 3 == 0)
                n /= 3;
            else if (n % 2 == 0)
                n /= 2;
            else
                n--;
            steps++;
        }

        If we observe carefully, the greedy strategy doesn’t work here.
        Eg: Given n = 10 , Greedy –> 10 /2 = 5 -1 = 4 /2 = 2 /2 = 1 ( 4 steps ).
        But the optimal way is –> 10 -1 = 9 /3 = 3 /3 = 1 ( 3 steps ).
        So, we must think of a dynamic approach for optimal solution.

ALGORITHM : (AS IMPLEMENTED FOR THIS SOLUTION)
    Customized Greedy Approach using Recursion :

        while ( n > 1)
        {
            if (n % 3 == 0)
                n /= 3;
            else if (n % 2 == 0) {
                if( (n-1)%3==0 ) n = n-1;
                else n /= 2;
            }
            else
                n--;
            steps++;
        }

        APPROACH (addition to the Greedy Approach) :
            1. if in case n is divisible by 2, then we needs to check firstly whether (n-1)%3 ==0,
            2. iff TRUE, then perform n = n-1, as when any number is divisible by 3 then the
               resultant number after division will be much lesser than when divisible by 2.
            3. iff FALSE, then perform n = n/2. and the process follows