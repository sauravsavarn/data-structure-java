Subset Sum

IDEA :
    Create a 2D array of size (arr.size() + 1) * (target + 1) of type boolean. The state
    DP[i][j] will be true if there exists a subset of elements from A[0….i] with sum value = ‘j’.
    The approach for the problem is:

    if (A[i-1] > j)
        DP[i][j] = DP[i-1][j]
    else
        DP[i][j] = DP[i-1][j] OR DP[i-1][j-A[i-1]]

    1.  This means that if current element has value greater than ‘current sum value’ we will copy
        the answer for previous cases
    2.  And if the current sum value is greater than the ‘ith’ element we will see if any of previous
        states have already experienced the sum=’j’ OR any previous states experienced a
        value ‘j – A[i]’ which will solve our purpose.
